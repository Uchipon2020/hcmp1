def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

    def flutterVersionName = localProperties.getProperty('flutter.versionName')
    if (flutterVersionName == null) {
        flutterVersionName = '1.0'

}
    apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
// END: FlutterFire Configuration
    apply plugin: 'kotlin-android'
    apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

    android {
       // compileSdkVersion 31

       // sourceSets {
       //     main.java.srcDirs += 'src/main/kotlin'
       // }

       // ndkVersion  "22.1.7171670"
        compileSdkVersion flutter.compileSdkVersion
        ndkVersion flutter.ndkVersion

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        kotlinOptions {
            jvmTarget = '1.8'
        }

        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
        }

        defaultConfig {
            // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
            applicationId "com.mine.helth_care_mania_prottype"
            minSdkVersion 22
            //targetSdkVersion 30
            targetSdkVersion flutter.targetSdkVersion
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }

       // signingConfigs {
       //     release {
       //         keyAlias keystoreProperties['keyAlias']
        //        keyPassword keystoreProperties['keyPassword']
        //        storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
       //         storePassword keystoreProperties['storePassword']
       //     }
       // }

        buildTypes {
            release {
                // TODO: Add your own signing config for the release build.
                // Signing with the debug keys for now, so `flutter run --release` works.
                signingConfig signingConfigs.debug
              //signingConfig signingConfigs.release
               //ndk{
                 //  debugSymblLevel 'SYMBOL_TABLE'
               // }
            }
        }

    }

    flutter {
        source '../..'
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        //implementation 'com.google.android.material:material:<version>'
    }
//}